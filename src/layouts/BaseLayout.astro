---
import { Footer, Header, ThemeProvider } from 'astro-pure/components/basic'
import type { SiteMeta } from 'astro-pure/types'
import BaseHead from '@/components/BaseHead.astro'
import config from '@/site-config'

// Import the global.css file here so that it is included on
// all pages through the use of the <BaseLayout /> component.
import '@/assets/styles/app.css'

interface Props {
  meta: SiteMeta
  highlightColor?: string
}

const {
  meta: { articleDate, description = config.description, ogImage, title },
  highlightColor,
  ...props
} = Astro.props

let initVisitors = 1068;
let initPageviews = 2314;
let umamiEnd = new Date().getTime();
let umamiHeader = {
    method: "GET",
    headers: {
        "Accept": "application/json",
        "x-umami-api-key": "api_d3HhUeSF6DyMmOq6FpKY8JaZ4rzHIhh9",
    },
};
let counter_uv: string | number = ''
let counter_pv: string | number = ''
const umamiResponse = await fetch("https://api.umami.is/v1/websites/312fc71b-66cf-492a-a31f-d51d17c3e528/sessions/stats?startAt=1752483669&endAt=" + umamiEnd, umamiHeader)
const umamiData = await umamiResponse.json()
counter_uv = umamiData.visitors.value + initVisitors
counter_pv = umamiData.pageviews.value + initPageviews


let timeDate = 0
let times = ''
// function runforTime(){
  var start: any = new Date("2023/08/31 00:00:00");

function runforTime() {
  var now: any = new Date();
  now.setTime(now.getTime()+250);
  var days = (now - start) / 1000 / 60 / 60 / 24;
  var dnum = Math.floor(days);
  var hours = (now - start) / 1000 / 60 / 60 - (24 * dnum);
  var hnum: any = Math.floor(hours);
  if(String(hnum).length === 1 ){
    hnum = "0" + hnum;
  }
  var minutes = (now - start) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);
  var mnum: any = Math.floor(minutes);
  if(String(mnum).length === 1 ){
    mnum = "0" + mnum;
  }
  var seconds = (now - start) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);
  var snum: any = Math.round(seconds);
  if(String(snum).length === 1 ){
    snum = "0" + snum;
  }
  timeDate = dnum;
  times = hnum + "h " + mnum + "m " + snum + "s ";
}
runforTime();
---

<html lang={config.locale.lang}>
  <head>
    <BaseHead {articleDate} {description} {ogImage} {title} />
    <ThemeProvider />
  </head>

  <body class='flex justify-center bg-background text-foreground' {...props}>
    {
      highlightColor && (
        <div
          id='highlight-gradient'
          class='pointer-events-none absolute start-0 top-0 z-0 h-screen w-full opacity-25'
          style={`background-image:linear-gradient(${highlightColor},transparent)`}
        />
      )
    }
    <div class='w-full max-w-[70rem] px-4 sm:px-7 lg:px-10'>
      <Header />
      <slot />
      <Footer />
      <div><span>{counter_uv}</span>
        &nbsp;Visitors&nbsp;&nbsp;<span>{counter_pv}</span>
        &nbsp;Views&nbsp;&nbsp;&nbsp;&nbsp;
        Running for <span>{timeDate}</span>d&nbsp;<span>{times}</span></div>
    </div>

    {/* Set highlight color */}
    <style define:vars={{ highlightColor }}>
      :global(.highlight) {
        color: var(--highlightColor, hsl(var(--primary) / var(--un-text-opacity))) !important;
      }
      :global(.highlight-bg) {
        background-color: var(
          --highlightColor,
          hsl(var(--primary) / var(--un-text-opacity))
        ) !important;
      }
    </style>
  </body>
</html>
